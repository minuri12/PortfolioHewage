{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portfolio\\\\New\\\\PortfolioHewage\\\\src\\\\Components\\\\Progress\\\\Progressbar.jsx\",\n  _s = $RefreshSig$();\nimport \"./Progressbar.css\";\nimport Logo from \"../../Assets/Logo.png\";\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Progressbar({\n  value = 0,\n  onComplete,\n  showButton\n}) {\n  _s();\n  const [present, setPresent] = useState(value);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (present < 100) {\n      const timer = setTimeout(() => setPresent(newVal => newVal + 1), 40);\n      return () => clearTimeout(timer);\n    } else {\n      onComplete(); // Call onComplete when progress is 100%\n    }\n  }, [present, onComplete]);\n  const handlebuttonclick = () => {\n    navigate(\"/Work\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-block3\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo,\n        className: \"logomark\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-logo\",\n          children: \"Minuri Senara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-underlogo\",\n          children: \"Full Stack Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), present < 100 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressbarfill\",\n        style: {\n          width: `${present}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressbartext\",\n        children: [present, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, present >= 100 && showButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button show\",\n      onClick: handlebuttonclick,\n      children: \"START\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Progressbar, \"51tEKjV9E53YG6Tu7wUwkFeFJb0=\", false, function () {\n  return [useNavigate];\n});\n_c = Progressbar;\nexport default Progressbar;\nvar _c;\n$RefreshReg$(_c, \"Progressbar\");","map":{"version":3,"names":["Logo","React","useEffect","useState","Navigate","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Progressbar","value","onComplete","showButton","_s","present","setPresent","navigate","timer","setTimeout","newVal","clearTimeout","handlebuttonclick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onClick","_c","$RefreshReg$"],"sources":["D:/Portfolio/New/PortfolioHewage/src/Components/Progress/Progressbar.jsx"],"sourcesContent":["import \"./Progressbar.css\";\r\nimport Logo from \"../../Assets/Logo.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Progressbar({ value = 0, onComplete, showButton }) {\r\n  const [present, setPresent] = useState(value);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (present < 100) {\r\n      const timer = setTimeout(() => setPresent((newVal) => newVal + 1), 40);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      onComplete(); // Call onComplete when progress is 100%\r\n    }\r\n  }, [present, onComplete]);\r\n\r\n  const handlebuttonclick = () => {\r\n    navigate(\"/Work\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"logo-block3\">\r\n        <img src={Logo} className=\"logomark\" alt=\"Logo\" />\r\n        <div className=\"LogoText\">\r\n          <div className=\"text-logo\">Minuri Senara</div>\r\n          <div className=\"text-underlogo\">Full Stack Developer</div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Show the progress bar and text only if present is less than 100 */}\r\n      {present < 100 ? (\r\n        <>\r\n          <div\r\n            className=\"progressbarfill\"\r\n            style={{ width: `${present}%` }}\r\n          ></div>\r\n          <div className=\"progressbartext\">{present}%</div>\r\n        </>\r\n      ) : null}\r\n\r\n      {/* Show the button if present is 100% */}\r\n      {present >= 100 && showButton && (\r\n        <button className=\"start-button show\" onClick={handlebuttonclick}>\r\n          START\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Progressbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}